
sudo: required
dist: trusty
language: cpp
osx_image: xcode6.4

notifications:
  email:
    on_success: change
    on_failure: always

os:
#  - linux
  - osx

compiler:
  - clang
  - gcc

env:
 - BUILDTYPE=DEBUG
 - BUILDTYPE=RELEASE
 - BUILDTYPE=RELWITHDEBINFO
 # - BUILDTYPE=ASAN           # Address sanitizer
 # - BUILDTYPE=UBSAN          # Undefined-behaviour sanitizer
 # - BUILDTYPE=ANALYZE        # Use scan_build, which builds with Clang's static analyzer

matrix:
 exclude:
   # ATM, GCC doesn't implement the memory sanitizer
   - compiler: gcc
     env: BUILDTYPE=MSAN
#    - compiler: gcc
#      env: BUILDTYPE="ANALYZE"

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "clang++" ]; then sudo apt-get update  -qq            ; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "clang++" ]; then sudo apt-get install -qq libc++-dev ; fi

install:
  - if [ "$CXX"       == "g++"            ]; then export CXX="g++-4.9"     CC="gcc-4.9"   ; fi
  # - if [ "$CXX"       == "clang++"        ]; then export CXX="clang++-3.6" CC="clang-3.6" ; fi
  - if [ "$CXX"       == "clang++"        ]; then export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -stdlib=libc++ " ; fi
  - if [ "$BUILDTYPE" == "DEBUG"          ]; then export CMAKE_BUILD_TYPE="DEBUG"         ; export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}"                                           ; fi
  - if [ "$BUILDTYPE" == "RELEASE"        ]; then export CMAKE_BUILD_TYPE="RELEASE"       ; export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}"                                           ; fi
  - if [ "$BUILDTYPE" == "RELWITHDEBINFO" ]; then export CMAKE_BUILD_TYPE="RELWITHDEBINFO"; export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS}"                                           ; fi
  # - if [ "$BUILDTYPE" == "ASAN"           ]; then export CMAKE_BUILD_TYPE="RELEASE"       ; export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fsanitize=address -fno-omit-frame-pointer"; fi
  # - if [ "$BUILDTYPE" == "UBSAN"          ]; then export CMAKE_BUILD_TYPE="RELEASE"       ; export CMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fsanitize=undefined                      "; fi
  # - if [ "$BUILDTYPE" == "ANALYZE"        ]; then export CMAKE_BUILD_TYPE="RELEASE"       ; export WRAPPER="scan_build-3.6 " ; fi else export WRAPPER=" "                         ; fi

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
#     - kalakris-cmake
#     - llvm-toolchain-precise-3.6
    packages:
    - g++-4.9
    - gcc-4.9
#     - clang-3.6
#     - cmake
#     - ninja-build

before_script:
#  - sudo add-apt-repository ppa:afrank/boost -y
#  - sudo add-apt-repository ppa:samuel-bachmann/boost/
#  - sudo apt-get update -q
#  - sudo apt-get install libboost1.57-all libboost1.57-all-dev
  - mkdir build && cd build
  - cmake "-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}" "-DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}" ..
  - cd $TRAVIS_BUILD_DIR

script: make -k -C build && build/travis-fiddle

deploy:
  provider: releases
  api_key:
    secure: ywyguRbIJMXgFRffEahFyqNoTL86bb1LO0W9IfufNTCDYPTquhMLFda7D7J0E4OEzAyB9PAcQPzBZL3C7HjZwJH7nmNQLc/+ie4WxEQrOAZsx2gQGXpscJN09dpFlhRZMWpZa0G5HdYAu1IxnU470uuKx1BNSeGl6zZbHIzHW8V/euzlAfbzkzt6H8NLE+g4oCEjK3H7ETEQbETWB63crkNa+RP0xwVXbtotTeFqqR6f7hTdwnEYRY8w51T32dq+dyg0QpmHJhyqKa3ALcNAc8PJgcCXcVUlL0/pj9O4r7EH4BGiOpfXMzcwLyVtpnC7MZXkCbAlQqCEL0it7BWZAuesNy4AFpJjPsnvLC5XNrcf3qRrcGPyYWLK9lGJCV3ZTwhAdWnMJyidt+91Lwus7qHJ9BGx5hCOc/VxSMyRZyrcoZnAlDulpOkVOiqoeReAGNQD4IQhYsWIKevaXb+oaW/0XLKi4MA7ckHXSuqpUlbyJsuW/J5zvpP8J5QO+rzqwDWa4D8644ZLtAG8gYzYVm/OpA4B/7uzE8i8TNgVhK3dY6DsOgHwBgFc5OSfj499De4rSWNR+Zit5TFLVJWTrpmQPNV/M8lrLMjtUbFLHpHagUk7Rk4GxSdu6ZO2Kpci7IyvO9PZ6gJnHS8UMYHBzruatDOm3o0Z1ck35dEUH1E=
  file:
    - build/travis-fiddle
  skip_cleanup: true
  on:
    tags: true
